import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class AvailableModulesService {

  private available_modules: Record<string, string[]> = {
    "Необоротні активи": [
      "Основні засоби",
      "Малоцінні необоротні матеріальні активи (МНМА)",
      "Інші необоротні матеріальні активи (ІНМА)",
      "Нематеріальні активи (НА)",
      "Незавершені капітальні інвестиції",
      "Облік ремонтів ОЗ",
      "Незавершені капітальні інвестиції. Служба НКБ",
      "Будівлі, споруди, автотранспорт служби БМЕС",
      "Облік ремонтів вагонів"
    ],
    "Запаси": [
      "Облік запасів на складі",
      "Бухгалтерський облік запасів",
      "Облік спецодягу",
      "Облік малоцінних і швидкозношуваних предметів",
      "Облік спецодягу та ЗІЗ",
      "Облік староординатних запасів",
      "Облік ТМЦ на складі",
      "Облік закупівель та постачання ТМЦ",
      "Облік медикаментів"
    ],
    "Кошти і розрахунки": [
      "Кошти (банк)",
      "Кошти (каса)",
      "Кошти (банк - валютні розрахунки)",
      "Облік розрахунків з дебіторами - кредиторами",
      "Облік орендних операцій",
      "Облік внутрішніх та внутрішньогосподарських розрахунків",
      "Фінансові моделі господарської діяльності",
      "Кошти (каса - валютні розрахунки)",
      "Централізоване фінансування"
    ],
    "Заробітна плата": [
      "Кадри",
      "Зарплата",
      "Статистична звітність по зарплаті",
      "Податкові розрахунки по зарплаті",
      "Розрахунки з пенсійним фондом по зарплаті",
      "ЛокБриг",
      "Розрахунки з бюджетними фондами по зарплаті",
      "Табель обліку робочого часу",
      "Щомісячна персоніфікація (Пенсійний фонд)",
      "Зарплата (наряди, маршрути провідників)",
      "Зарплата (Розрахунок маршрутів провідників)",
      "Зарплата (Довідник Номенклатури видів оплати)",
      "Єдиний внесок - Розрахунки з фондом соціального страхування",
      "Розрахунок оплати за дні хвороби та зарплати",
      "Облік талонів на харчування",
      "Документи по зарплаті",
      "Аліменти, депоненти",
      "Розподіл виконавчих робіт по зарплаті"
    ],
    "Облік власного капіталу та фінансових інвестицій": [
      "Облік власного капіталу",
      "Облік фінансових інвестицій"
    ],
    "Реалізація продукції, товарів, робіт, послуг": [
      "Реалізація продукції, товарів, робіт, послуг",
      "Реалізація продукції, товарів, робіт, послуг (ЗБ)"
    ],
    "Облік на позабалансових рахунках": [
      "Облік на позабалансових рахунках"
    ],
    "Облік доходів, витрат та результатів діяльності": [
      "Облік доходів та результатів діяльності",
      "Облік витрат"
    ],
    "Звітність": [
      "АРМ 'Фінансова звітність'",
      "Фінансова та галузева статистична звітність",
      "Статистична звітність",
      "Оборотний баланс та Головна книга (звіт)",
      "Відомості, оперативні та аналітичні довідки",
      "Календар бухгалтера",
      "Зведена фінансова та податкова звітність"
    ],
    "Додаткові модулі": [
      "Облік промислового виробництва",
      "Облік торгівлі, в т.ч. вагони-ресторани",
      "Облік громадського харчування",
      "Нарахування комунальних платежів",
      "Облік автотранспорту",
      "Облік водопостачання",
      "Облік використання енергоносіїв",
      "Облік використання форменого одягу",
      "Облік сервісного обслуговування абонентів телефонної мережі",
      "Облік спільної діяльності",
      "Облік будівельних контрактів",
      "Кошторис",
      "Облік паливного складу",
      "Облік харчування для пансіонатів",
      "Облік виробництва та реалізації промислової продукції",
      "Реєстрація відповідальних пансіонатів"
    ],
    "Ведення НДІ": [
      "Ведення Нормативно-довідкової інформації системи",
      "Ведення зовнішніх класифікаторів системи",
      "Імпорт довідників із загальносистемних класифікаторів",
      "Робота з договорами"
    ]
  };

  constructor() { }

  getModules(): Array<string> {
    return Object.keys(this.available_modules);
  }


  getSubmodule(index: number): string[] | undefined {
    const keys = Object.keys(this.available_modules)

    if (index < 0 || index >= keys.length) {
      return undefined
    }

    const key = keys[index]
    return this.available_modules[key]
  }
}
